// <auto-generated />

using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;

namespace TennisClub.DAL.Migrations
{
    [DbContext(typeof(TennisClubContext))]
    internal class TennisClubContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TennisClub.DAL.Entities.Game", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("integer")
                    .HasAnnotation("SqlServer:IdentityIncrement", 1)
                    .HasAnnotation("SqlServer:IdentitySeed", 1)
                    .HasAnnotation("SqlServer:ValueGenerationStrategy",
                        SqlServerValueGenerationStrategy.IdentityColumn);

                b.Property<DateTime>("Date")
                    .HasColumnType("date");

                b.Property<string>("GameNumber")
                    .IsRequired()
                    .HasColumnType("varchar(10)");

                b.Property<int>("LeagueId")
                    .HasColumnType("integer");

                b.Property<int>("MemberId")
                    .HasColumnType("integer");

                b.HasKey("Id");

                b.HasIndex("GameNumber")
                    .IsUnique();

                b.HasIndex("LeagueId");

                b.HasIndex("MemberId");

                b.ToTable("tblGames");
            });

            modelBuilder.Entity("TennisClub.DAL.Entities.GameResult", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("integer")
                    .HasAnnotation("SqlServer:IdentityIncrement", 1)
                    .HasAnnotation("SqlServer:IdentitySeed", 1)
                    .HasAnnotation("SqlServer:ValueGenerationStrategy",
                        SqlServerValueGenerationStrategy.IdentityColumn);

                b.Property<int>("GameId")
                    .HasColumnType("integer");

                b.Property<byte>("ScoreOpponent")
                    .HasColumnType("tinyint");

                b.Property<byte>("ScoreTeamMember")
                    .HasColumnType("tinyint");

                b.Property<byte>("SetNr")
                    .HasColumnType("tinyint");

                b.HasKey("Id");

                b.HasIndex("GameId", "SetNr")
                    .IsUnique();

                b.ToTable("tblGameResults");
            });

            modelBuilder.Entity("TennisClub.DAL.Entities.Gender", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("integer")
                    .HasAnnotation("SqlServer:IdentityIncrement", 1)
                    .HasAnnotation("SqlServer:IdentitySeed", 1)
                    .HasAnnotation("SqlServer:ValueGenerationStrategy",
                        SqlServerValueGenerationStrategy.IdentityColumn);

                b.Property<string>("Name")
                    .IsRequired()
                    .HasColumnType("varchar(10)");

                b.HasKey("Id");

                b.HasIndex("Name")
                    .IsUnique();

                b.ToTable("tblGenders");

                b.HasData(
                    new
                    {
                        Id = 1,
                        Name = "Man"
                    },
                    new
                    {
                        Id = 2,
                        Name = "Vrouw"
                    });
            });

            modelBuilder.Entity("TennisClub.DAL.Entities.League", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("integer")
                    .HasAnnotation("SqlServer:IdentityIncrement", 1)
                    .HasAnnotation("SqlServer:IdentitySeed", 1)
                    .HasAnnotation("SqlServer:ValueGenerationStrategy",
                        SqlServerValueGenerationStrategy.IdentityColumn);

                b.Property<string>("Name")
                    .IsRequired()
                    .HasColumnType("varchar(20)");

                b.HasKey("Id");

                b.HasIndex("Name")
                    .IsUnique();

                b.ToTable("tblLeagues");

                b.HasData(
                    new
                    {
                        Id = 1,
                        Name = "Recreatief"
                    },
                    new
                    {
                        Id = 2,
                        Name = "Competitie"
                    },
                    new
                    {
                        Id = 3,
                        Name = "Toptennis"
                    });
            });

            modelBuilder.Entity("TennisClub.DAL.Entities.Member", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("integer")
                    .HasAnnotation("SqlServer:IdentityIncrement", 1)
                    .HasAnnotation("SqlServer:IdentitySeed", 1)
                    .HasAnnotation("SqlServer:ValueGenerationStrategy",
                        SqlServerValueGenerationStrategy.IdentityColumn);

                b.Property<string>("Addition")
                    .HasColumnType("varchar(2)");

                b.Property<string>("Address")
                    .IsRequired()
                    .HasColumnType("varchar(70)");

                b.Property<DateTime>("BirthDate")
                    .HasColumnType("date");

                b.Property<string>("City")
                    .IsRequired()
                    .HasColumnType("varchar(30)");

                b.Property<bool?>("Deleted")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("bit")
                    .HasDefaultValue(false);

                b.Property<string>("FederationNr")
                    .IsRequired()
                    .HasColumnType("varchar(10)");

                b.Property<string>("FirstName")
                    .IsRequired()
                    .HasColumnType("varchar(25)");

                b.Property<int>("GenderId")
                    .HasColumnType("integer");

                b.Property<string>("LastName")
                    .IsRequired()
                    .HasColumnType("varchar(35)");

                b.Property<string>("Number")
                    .IsRequired()
                    .HasColumnType("varchar(6)");

                b.Property<string>("PhoneNr")
                    .HasColumnType("varchar(15)");

                b.Property<string>("Zipcode")
                    .IsRequired()
                    .HasColumnType("varchar(6)");

                b.HasKey("Id");

                b.HasIndex("FederationNr")
                    .IsUnique();

                b.HasIndex("GenderId");

                b.ToTable("tblMembers");
            });

            modelBuilder.Entity("TennisClub.DAL.Entities.MemberFine", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("integer")
                    .HasAnnotation("SqlServer:IdentityIncrement", 1)
                    .HasAnnotation("SqlServer:IdentitySeed", 1)
                    .HasAnnotation("SqlServer:ValueGenerationStrategy",
                        SqlServerValueGenerationStrategy.IdentityColumn);

                b.Property<decimal>("Amount")
                    .HasColumnType("decimal(7, 2)");

                b.Property<int>("FineNumber")
                    .HasColumnType("integer");

                b.Property<DateTime>("HandoutDate")
                    .HasColumnType("date");

                b.Property<int>("MemberId")
                    .HasColumnType("integer");

                b.Property<DateTime?>("PaymentDate")
                    .HasColumnType("date");

                b.HasKey("Id");

                b.HasIndex("FineNumber")
                    .IsUnique();

                b.HasIndex("MemberId");

                b.ToTable("tblMemberFines");
            });

            modelBuilder.Entity("TennisClub.DAL.Entities.MemberRole", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("integer")
                    .HasAnnotation("SqlServer:IdentityIncrement", 1)
                    .HasAnnotation("SqlServer:IdentitySeed", 1)
                    .HasAnnotation("SqlServer:ValueGenerationStrategy",
                        SqlServerValueGenerationStrategy.IdentityColumn);

                b.Property<DateTime?>("EndDate")
                    .HasColumnType("date");

                b.Property<int>("MemberId")
                    .HasColumnType("integer");

                b.Property<int>("RoleId")
                    .HasColumnType("integer");

                b.Property<DateTime>("StartDate")
                    .HasColumnType("date");

                b.HasKey("Id");

                b.HasIndex("RoleId");

                b.HasIndex("MemberId", "RoleId", "StartDate", "EndDate")
                    .IsUnique()
                    .HasFilter("[EndDate] IS NOT NULL");

                b.ToTable("tblMemberRoles");
            });

            modelBuilder.Entity("TennisClub.DAL.Entities.Role", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("integer")
                    .HasAnnotation("SqlServer:IdentityIncrement", 1)
                    .HasAnnotation("SqlServer:IdentitySeed", 1)
                    .HasAnnotation("SqlServer:ValueGenerationStrategy",
                        SqlServerValueGenerationStrategy.IdentityColumn);

                b.Property<string>("Name")
                    .IsRequired()
                    .HasColumnType("varchar(20)");

                b.HasKey("Id");

                b.HasIndex("Name")
                    .IsUnique();

                b.ToTable("tblRoles");

                b.HasData(
                    new
                    {
                        Id = 1,
                        Name = "Voorzitter"
                    },
                    new
                    {
                        Id = 2,
                        Name = "Bestuurslid"
                    },
                    new
                    {
                        Id = 3,
                        Name = "Secretaris"
                    },
                    new
                    {
                        Id = 4,
                        Name = "Penningmeester"
                    },
                    new
                    {
                        Id = 5,
                        Name = "Speler"
                    });
            });

            modelBuilder.Entity("TennisClub.DAL.Entities.Game", b =>
            {
                b.HasOne("TennisClub.DAL.Entities.League", "LeagueNavigation")
                    .WithMany("Games")
                    .HasForeignKey("LeagueId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("TennisClub.DAL.Entities.Member", "MemberNavigation")
                    .WithMany("Games")
                    .HasForeignKey("MemberId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();
            });

            modelBuilder.Entity("TennisClub.DAL.Entities.GameResult", b =>
            {
                b.HasOne("TennisClub.DAL.Entities.Game", "GameNavigation")
                    .WithMany("GameResults")
                    .HasForeignKey("GameId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();
            });

            modelBuilder.Entity("TennisClub.DAL.Entities.Member", b =>
            {
                b.HasOne("TennisClub.DAL.Entities.Gender", "GenderNavigation")
                    .WithMany("Members")
                    .HasForeignKey("GenderId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();
            });

            modelBuilder.Entity("TennisClub.DAL.Entities.MemberFine", b =>
            {
                b.HasOne("TennisClub.DAL.Entities.Member", "MemberNavigation")
                    .WithMany("MemberFines")
                    .HasForeignKey("MemberId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();
            });

            modelBuilder.Entity("TennisClub.DAL.Entities.MemberRole", b =>
            {
                b.HasOne("TennisClub.DAL.Entities.Member", "MemberNavigation")
                    .WithMany("MemberRoles")
                    .HasForeignKey("MemberId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("TennisClub.DAL.Entities.Role", "RoleNavigation")
                    .WithMany("MemberRoles")
                    .HasForeignKey("RoleId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();
            });
#pragma warning restore 612, 618
        }
    }
}