// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TennisClub.DAL;

namespace TennisClub.DAL.Migrations
{
    [DbContext(typeof(TennisClubContext))]
    [Migration("20201004234524_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TennisClub.BL.Entities.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasMaxLength(10)
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<string>("GameNumber")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<byte>("LeagueId")
                        .HasColumnType("tinyint");

                    b.Property<int>("MemberId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasAlternateKey("GameNumber");

                    b.HasIndex("LeagueId");

                    b.HasIndex("MemberId");

                    b.ToTable("tblGames");
                });

            modelBuilder.Entity("TennisClub.BL.Entities.GameResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasMaxLength(10)
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GameId")
                        .HasColumnType("integer");

                    b.Property<byte>("ScoreOpponent")
                        .HasColumnType("tinyint");

                    b.Property<byte>("ScoreTeamMember")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SetNr")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasAlternateKey("GameId", "SetNr");

                    b.ToTable("tblGameResults");
                });

            modelBuilder.Entity("TennisClub.BL.Entities.Gender", b =>
                {
                    b.Property<byte>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasMaxLength(3)
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.HasAlternateKey("Name");

                    b.ToTable("tblGenders");

                    b.HasData(
                        new
                        {
                            Id = (byte)1,
                            Name = "Man"
                        },
                        new
                        {
                            Id = (byte)2,
                            Name = "Vrouw"
                        });
                });

            modelBuilder.Entity("TennisClub.BL.Entities.League", b =>
                {
                    b.Property<byte>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasMaxLength(3)
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasAlternateKey("Name");

                    b.ToTable("tblLeagues");

                    b.HasData(
                        new
                        {
                            Id = (byte)1,
                            Name = "Recreatief"
                        },
                        new
                        {
                            Id = (byte)2,
                            Name = "Competitie"
                        },
                        new
                        {
                            Id = (byte)3,
                            Name = "Toptennis"
                        });
                });

            modelBuilder.Entity("TennisClub.BL.Entities.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasMaxLength(10)
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Addition")
                        .HasColumnType("varchar(2)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("varchar(70)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("date");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<bool?>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("FederationNr")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(25)");

                    b.Property<byte>("GenderId")
                        .HasColumnType("tinyint");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(35)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("varchar(6)");

                    b.Property<string>("PhoneNr")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Zipcode")
                        .IsRequired()
                        .HasColumnType("varchar(6)");

                    b.HasKey("Id");

                    b.HasAlternateKey("FederationNr");

                    b.HasIndex("GenderId");

                    b.ToTable("tblMembers");
                });

            modelBuilder.Entity("TennisClub.BL.Entities.MemberFine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasMaxLength(10)
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(7, 2)");

                    b.Property<int>("FineNumber")
                        .HasColumnType("integer");

                    b.Property<DateTime>("HandoutDate")
                        .HasColumnType("date");

                    b.Property<int>("MemberId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasAlternateKey("FineNumber");

                    b.HasIndex("MemberId");

                    b.ToTable("tblMemberFines");
                });

            modelBuilder.Entity("TennisClub.BL.Entities.MemberRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasMaxLength(10)
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("date");

                    b.Property<int>("MemberId")
                        .HasColumnType("integer");

                    b.Property<byte>("RoleId")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasAlternateKey("MemberId", "RoleId", "StartDate");

                    b.HasIndex("RoleId");

                    b.ToTable("tblMemberRoles");
                });

            modelBuilder.Entity("TennisClub.BL.Entities.Role", b =>
                {
                    b.Property<byte>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasMaxLength(3)
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasAlternateKey("Name");

                    b.ToTable("tblRoles");

                    b.HasData(
                        new
                        {
                            Id = (byte)1,
                            Name = "Voorzitter"
                        },
                        new
                        {
                            Id = (byte)2,
                            Name = "Bestuurslid"
                        },
                        new
                        {
                            Id = (byte)3,
                            Name = "Secretaris"
                        },
                        new
                        {
                            Id = (byte)4,
                            Name = "Penningmeester"
                        },
                        new
                        {
                            Id = (byte)5,
                            Name = "Speler"
                        });
                });

            modelBuilder.Entity("TennisClub.BL.Entities.Game", b =>
                {
                    b.HasOne("TennisClub.BL.Entities.League", "LeagueNavigation")
                        .WithMany("Games")
                        .HasForeignKey("LeagueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TennisClub.BL.Entities.Member", "MemberNavigation")
                        .WithMany("Games")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TennisClub.BL.Entities.GameResult", b =>
                {
                    b.HasOne("TennisClub.BL.Entities.Game", "GameNavigation")
                        .WithMany("GameResults")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TennisClub.BL.Entities.Member", b =>
                {
                    b.HasOne("TennisClub.BL.Entities.Gender", "GenderNavigation")
                        .WithMany("Members")
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TennisClub.BL.Entities.MemberFine", b =>
                {
                    b.HasOne("TennisClub.BL.Entities.Member", "MemberNavigation")
                        .WithMany("MemberFines")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TennisClub.BL.Entities.MemberRole", b =>
                {
                    b.HasOne("TennisClub.BL.Entities.Member", "MemberNavigation")
                        .WithMany("MemberRoles")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TennisClub.BL.Entities.Role", "RoleNavigation")
                        .WithMany("MemberRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
